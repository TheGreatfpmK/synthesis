2024-03-09 13:30:41,664 - cli.py - This is Paynt version 0.1.0.
2024-03-09 13:30:41,665 - sketch.py - loading sketch from /home/fpmk/research/synthesis/experiments-beliefs/../models/archive/cav23-saynt/drone-4-2/sketch.templ ...
2024-03-09 13:30:41,665 - sketch.py - assuming sketch in PRISM format...
2024-03-09 13:30:41,685 - prism_parser.py - PRISM model type: POMDP
2024-03-09 13:30:41,685 - prism_parser.py - loading properties from /home/fpmk/research/synthesis/experiments-beliefs/../models/archive/cav23-saynt/drone-4-2/sketch.props ...
 WARN (FormulaParserGrammar.cpp:338): Identifier `R' coincides with a reserved keyword or operator. Property expressions using the variable or constant 'R' will not be parsed correctly.
2024-03-09 13:30:41,688 - prism_parser.py - found the following specification: optimality: Pmax=? ["notbad" U "goal"] 
2024-03-09 13:30:41,769 - sketch.py - sketch parsing OK
2024-03-09 13:30:41,769 - sketch.py - constructed explicit quotient having 1226 states and 2954 actions
2024-03-09 13:30:41,769 - property.py - converting until formula to eventually...
2024-03-09 13:30:41,769 - sketch.py - found the following specification optimality: Pmax=? [F "goal"] 
2024-03-09 13:30:41,771 - pomdp.py - constructed POMDP having 761 observations.
2024-03-09 13:30:41,797 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:30:41,799 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:30:41,811 - synthesizer_pomdp.py - Storm POMDP option enabled
2024-03-09 13:30:41,811 - synthesizer_pomdp.py - Storm settings: iterative - (900, 60, 10), get_storm_result - None, storm_options - cutoff, prune_storm - False, unfold_strategy - (True, False), use_storm_cutoffs - False
2024-03-09 13:30:41,811 - storm_pomdp_control.py - Interactive Storm started
2024-03-09 13:30:41,812 - storm_pomdp_control.py - starting Storm POMDP analysis
2024-03-09 13:30:51,856 - storm_pomdp_control.py - Pausing Storm
Finished exploring under-approximation MDP.
Start analysis...
-----------Storm-----------               
Value = 0.963001310341568 | Time elapsed = 29.8s | FSC size = 69406

2024-03-09 13:31:12,700 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,724 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,726 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,732 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,761 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,763 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,769 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,792 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,794 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,801 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,824 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,826 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,832 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,856 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,858 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,865 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,895 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,897 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,904 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,927 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,929 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,948 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:12,971 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:12,973 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:12,980 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,003 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,005 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,012 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,035 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,037 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,044 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,068 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,070 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,077 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,101 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,103 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,109 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,133 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,153 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,160 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,183 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,185 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,192 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,215 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,217 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,224 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,248 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,250 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,257 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,281 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,283 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,290 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,314 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,316 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,346 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,370 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,373 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,379 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,403 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,405 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,413 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,443 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,445 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,452 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,475 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,477 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,484 - pomdp.py - constructed POMDP having 762 observations.
2024-03-09 13:31:13,509 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:13,511 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:13,516 - synthesizer_pomdp.py - 23 threads for enhanced SAYNT created
2024-03-09 13:31:13,516 - synthesizer_pomdp.py - new synthesis time per thread: 2.5s
2024-03-09 13:31:13,517 - storm_pomdp_control.py - Main family based on data from Storm: reduced design space from 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504 to 483729408
2024-03-09 13:31:13,517 - synthesizer_pomdp.py - Timeout for PAYNT started
2024-03-09 13:31:13,568 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
-----------PAYNT-----------                     
Value = 0.9153312529137074 | Time elapsed = 32.0s | FSC size = 5161

-----------PAYNT-----------                     
Value = 0.9155232429743161 | Time elapsed = 32.1s | FSC size = 5161

-----------PAYNT-----------                     
Value = 0.9156537362457025 | Time elapsed = 32.4s | FSC size = 5153

-----------PAYNT-----------                     
Value = 0.9157671401276337 | Time elapsed = 32.8s | FSC size = 5173

-----------PAYNT-----------                     
Value = 0.915869659572621 | Time elapsed = 32.8s | FSC size = 5173

-----------PAYNT-----------                     
Value = 0.91597347384987 | Time elapsed = 32.9s | FSC size = 5173

-----------PAYNT-----------                     
Value = 0.9161196859903677 | Time elapsed = 33.2s | FSC size = 5165

-----------PAYNT-----------                     
Value = 0.9168202791645554 | Time elapsed = 34.2s | FSC size = 5163

2024-03-09 13:31:16,104 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:16,544 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:16,544 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:16,547 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:16,551 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:19,134 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:19,568 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:19,569 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:19,571 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:19,576 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:22,156 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:22,596 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:22,596 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:22,599 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:22,604 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:25,191 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:25,621 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:25,622 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:25,624 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:25,629 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:28,195 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:28,634 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:28,635 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:28,638 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:28,643 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:31,203 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:31,647 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:31,647 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:31,650 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:31,654 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:34,267 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:34,672 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:34,673 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:34,675 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:34,680 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:37,271 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:37,699 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:37,699 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:37,702 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:37,707 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:40,273 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:40,709 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:40,709 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:40,712 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:40,716 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:43,284 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:43,718 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:43,719 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:43,722 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:43,728 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:46,338 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:46,736 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:46,737 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:46,740 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:46,745 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:49,315 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:49,753 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:49,753 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:49,755 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:49,760 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:52,361 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:52,778 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:52,779 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:52,781 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:52,849 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:55,426 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:55,856 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:55,857 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:55,860 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:55,865 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:31:58,434 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:31:58,868 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:31:58,869 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:31:58,871 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:31:58,876 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:01,446 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:01,877 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:01,878 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:01,881 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:01,885 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:04,468 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:04,903 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:04,904 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:04,906 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:04,911 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:07,526 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:07,929 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:07,930 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:07,932 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:07,937 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:10,503 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:10,939 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:10,939 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:10,942 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:10,947 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:13,521 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:13,949 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:13,949 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:13,952 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:13,957 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:16,574 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:16,958 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:16,958 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:16,961 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:16,965 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:19,547 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:19,986 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:19,987 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:19,989 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:19,994 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:22,558 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:32:22,996 - synthesizer_pomdp.py - Synthesizing optimal k=1 controller ...
2024-03-09 13:32:22,996 - pomdp.py - unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:32:22,999 - pomdp.py - constructed quotient MDP having 1226 states and 2954 actions.
2024-03-09 13:32:23,004 - synthesizer.py - synthesis initiated, design space: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2024-03-09 13:32:25,604 - synthesizer_ar_storm.py - Pausing synthesis

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.963001310341568
controller size: 69406

------------------------------------

used FSCs: {}
FSCs used count: 0
2024-03-09 13:32:26,465 - storm_pomdp_control.py - Interactive Storm resumed
2024-03-09 13:32:26,465 - storm_pomdp_control.py - Updating FSC values in Storm
2024-03-09 13:32:36,486 - storm_pomdp_control.py - Pausing Storm
Finished exploring under-approximation MDP.
Start analysis...
-----------Storm-----------               
Value = 0.9710318527339832 | Time elapsed = 206.8s | FSC size = 134433

2024-03-09 13:34:11,156 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:11,156 - synthesizer_ar_storm.py - Additional memory needed
2024-03-09 13:34:11,157 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:34:11,157 - synthesizer.py - A(0,[start & turn & dx=2 & dy=4 & seedx=4 & seedy=4])={'west'}, A(0,[start & turn & dx=1 & dy=4 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=4 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=3 & dy=3 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=1 & dy=4 & seedx=2 & seedy=3])={'west'}, A(0,[start & turn & dy=1 & seedx=1 & seedy=3])={'north'}, A(0,[start & turn & dx=1 & dy=3 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & seedx=1 & seedy=1])={'north'}, A(0,[start & turn & dx=2 & seedx=1 & seedy=1])={'east'}, A(0,[start & turn & dx=4 & dy=3 & seedx=-1 & seedy=-1])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=4 & seedy=2])={'south'}, A(0,[start & turn & dy=1 & seedx=2 & seedy=2])={'west'}, A(0,[start & turn & dx=2 & dy=2 & seedx=3])={'south'}, A(0,[start & turn & dx=1 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=1 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & seedx=2 & seedy=1])={'east'}, A(0,[start & turn & dx=2 & dy=4 & seedy=3])={'east'}, A(0,[start & turn & dx=4 & dy=2 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=3 & seedy=3])={'north'}, A(0,[start & turn & dx=2 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=4 & seedy=4])={'north'}, A(0,[start & turn & dx=4 & dy=2 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & dx=4 & dy=3 & seedx=2 & seedy=3])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=4 & seedy=4])={'west'}, A(0,[start & turn & dy=2 & seedx=1 & seedy=4])={'north'}, A(0,[start & turn & dx=2 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=4 & dy=2 & seedx=-1 & seedy=-1])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedy=2])={'east'}, A(0,[start & turn & dy=3 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & dy=1 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=3 & dy=2 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=4 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & dy=4 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dy=3 & seedx=-1 & seedy=-1])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=3 & seedy=1])={'west'}, A(0,[start & turn & dx=2 & seedy=1])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedy=4])={'east'}, A(0,[start & turn & dy=4 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedy=1])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dy=3 & seedy=1])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=4 & seedy=4])={'west'}, A(0,[start & turn & dx=3 & dy=4 & seedx=4 & seedy=3])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & seedx=3 & seedy=1])={'west'}, A(0,[start & turn & dx=2 & dy=1 & seedx=4])={'south'}, A(0,[start & turn & seedx=2])={'south'}, A(0,[start & turn & dx=1 & dy=3 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & dy=4 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=2 & dy=4 & seedx=4 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=4 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=2 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dy=4 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedy=4])={'east'}, A(0,[start & turn & dy=1 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=1 & dy=1 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=3 & seedx=1 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & seedx=4 & seedy=1])={'west'}, A(0,[start & turn & dx=3 & dy=1 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=3 & dy=1 & seedx=4 & seedy=1])={'west'}, A(0,[start & turn & dx=3 & dy=3 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=4 & seedx=2])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=3 & dy=1 & seedx=2])={'south'}, A(0,[start & turn & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=2 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & dy=1 & seedx=2 & seedy=1])={'east'}, A(0,[start & turn & dx=4 & dy=3 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & seedx=4 & seedy=2])={'west'}, A(0,[start & turn & dx=1 & dy=3 & seedx=3 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & dy=1])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=1])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedx=1])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=2])={'south'}, A(0,[start & turn & dx=3 & dy=2 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dy=2 & seedx=2])={'south'}, A(0,[start & turn & dy=4 & seedx=2 & seedy=3])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dy=4 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dy=1 & seedx=2])={'south'}, A(0,[start & turn & dy=2 & seedx=1 & seedy=3])={'north'}, A(0,[start & turn & dx=4 & dy=1 & seedx=2 & seedy=3])={'south'}, A(0,[start & turn & dx=1 & seedx=2 & seedy=2])={'north'}, A(0,[start & turn & dx=2 & dy=3 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=3 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=3])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=3 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & dy=4 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=3 & dy=1 & seedx=4])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedx=4])={'south'}, A(0,[start & turn & dy=3 & seedx=1 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & seedx=3])={'south'}, A(0,[start & turn & dy=2 & seedx=2 & seedy=4])={'north'}, A(0,[start & turn & dx=3 & dy=3 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=4 & dy=3 & seedx=2 & seedy=4])={'south'}, A(0,[start & turn & dy=2 & seedx=-1 & seedy=-1])={'west'}, A(0,[start & turn & dx=4 & dy=1 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & seedx=2 & seedy=1])={'west'}, A(0,[start & turn & dx=1 & dy=2])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=3 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=3 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=1 & seedx=1 & seedy=2])={'north'}, A(0,[start & turn & dx=2 & dy=3 & seedx=4 & seedy=4])={'north'}, A(0,[start & turn & dx=2 & dy=3 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=4 & seedx=3 & seedy=2])={'north'}, A(0,[start & turn & dx=1 & dy=2 & seedx=1 & seedy=3])={'north'}, A(0,[start & turn & dx=4 & dy=2 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & dy=1 & seedx=3 & seedy=3])={'west'}, A(0,[start & turn & dy=1 & seedx=1 & seedy=2])={'north'}, A(0,[start & turn & dx=2 & dy=1 & seedx=3 & seedy=3])={'west'}, A(0,[start & turn & dx=4 & dy=2 & seedx=2])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=4 & dy=2 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=3 & seedy=3])={'west'}, A(0,[start & turn & dx=2 & dy=2 & seedx=4 & seedy=2])={'south'}, A(0,[start & turn & dy=4 & seedx=1 & seedy=3])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=2 & seedy=3])={'north'}, A(0,[start & turn & dx=1 & seedy=1])={'east'}, A(0,[start & turn & dx=4 & dy=1 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=4 & seedx=2 & seedy=4])={'west'}, A(0,[start & turn & dx=4 & dy=3 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedx=3 & seedy=4])={'west'}, A(0,[start & turn & dx=3 & seedx=2 & seedy=1])={'east'}, A(0,[start & turn & dx=2 & dy=4 & seedx=3 & seedy=3])={'west'}, A(0,[start & turn & dx=3 & dy=3 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=1 & seedy=1])={'east'}, A(0,[start & turn & dx=3 & dy=1 & seedx=4 & seedy=3])={'west'}, A(0,[start & turn & dx=2 & dy=2 & seedx=4 & seedy=3])={'west'}, A(0,[start & turn & dx=2 & dy=2 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedx=3 & seedy=3])={'north'}, A(0,[start & turn & dx=2 & dy=1 & seedx=-1 & seedy=-1])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=3 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & dy=2 & seedx=2 & seedy=4])={'east'}, A(0,[start & turn & seedy=1])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=4 & seedy=2])={'west'}, A(0,[start & turn & dx=4 & dy=1 & seedx=4 & seedy=2])={'north'}, A(0,[start & turn & dx=2 & dy=4 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=3 & seedy=1])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=3 & seedx=1 & seedy=2])={'south'}, A(0,[start & turn & dy=3 & seedx=1 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & seedx=3])={'west'}, A(0,[start & turn & dy=3 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=4 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=3 & seedy=4])={'north'}, A(0,[start & turn & dx=3 & seedx=3 & seedy=1])={'west'}, A(0,[start & turn & dx=4 & dy=2 & seedx=4])={'south'}, A(0,[start & turn & dx=3 & dy=4 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & dy=4 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & seedx=3 & seedy=2])={'west'}, A(0,[start & turn & dx=1 & dy=2 & seedy=4])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & seedx=4 & seedy=1])={'west'}, A(0,[start & turn & dy=4 & seedx=1 & seedy=4])={'north'}, A(0,[start & turn & dx=3 & dy=1 & seedx=1])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=3])={'south'}, A(0,[start & turn & dx=1 & dy=4 & seedy=3])={'east'}, A(0,[start & turn & dx=1 & dy=2 & seedy=3])={'east'}, A(0,[start & turn & dx=3 & dy=1 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & dy=2 & seedx=1 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & seedx=1 & seedy=1])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & seedx=1])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=4 & seedy=3])={'west'}, A(0,[start & turn & dx=1 & dy=1 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & dy=1 & seedx=4 & seedy=3])={'west'}, A(0,[start & turn & dy=1 & seedy=2])={'north'}, A(0,[start & turn & dx=1 & dy=4 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & seedx=3 & seedy=2])={'north'}, A(0,[start & turn & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=2 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dy=1 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & dy=3 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=3 & seedy=2])={'west'}, A(0,[start & turn & dx=2 & dy=1 & seedx=3 & seedy=2])={'west'}, A(0,[start & turn & dx=4 & dy=1 & seedx=3 & seedy=2])={'north'}, A(0,[start & turn & dx=2 & dy=4 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=3 & seedx=2])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=3 & seedx=4 & seedy=3])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedx=2])={'south'}, A(0,[start & turn & dx=2 & dy=3 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=3 & dy=1 & seedx=3])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=4 & seedy=3])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=2 & seedy=1])={'west'}, A(0,[start & turn & dy=4 & seedx=2 & seedy=4])={'north'}, A(0,[start & turn & dx=2 & seedx=3 & seedy=2])={'west'}, A(0,[start & turn & dx=1 & dy=3 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=2 & seedx=2])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedy=1])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=3 & seedx=1 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & dy=4 & seedx=3 & seedy=3])={'west'}, A(0,[start & turn & dy=1 & seedy=3])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=4 & seedy=4])={'east'}, A(0,[start & turn & dx=1 & seedx=3 & seedy=1])={'west'}, A(0,[start & turn & dx=3 & dy=1 & seedx=4 & seedy=2])={'west'}, A(0,[start & turn & dy=2 & seedy=4])={'east'}, A(0,[start & turn & dx=4 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & dy=1 & seedx=2])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=2 & seedy=2])={'west'}, A(0,[start & turn & dx=3 & dy=2 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=1 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=4 & dy=3 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & dy=1 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dy=3 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dy=3 & seedy=4])={'north'}, A(0,[start & turn & dx=3 & dy=1 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & dx=4 & dy=3 & seedx=3 & seedy=4])={'south'}, A(0,[start & turn & dy=3 & seedy=2])={'south'}, A(0,[start & turn & dx=3 & dy=1 & seedx=3 & seedy=2])={'north'}, A(0,[start & turn & dx=4 & dy=1 & seedx=3])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=4 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=4 & dy=2 & seedx=3 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & dy=4 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=4 & dy=2 & seedx=3])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedy=1])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dy=1 & seedx=1])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dy=4 & seedy=3])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedx=2 & seedy=3])={'west'}, A(0,[start & turn & dx=2 & dy=2 & seedx=2 & seedy=4])={'east'}, A(0,[start & turn & dx=1 & dy=4 & seedy=2])={'east'}, A(0,[start & turn & dy=2 & seedx=2 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & dy=2 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dy=2])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & seedx=3 & seedy=1])={'north'}, A(0,[start & turn & dx=4 & seedx=4 & seedy=2])={'west'}, A(0,[start & turn & dx=3 & dy=4 & seedx=3 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=1 & dy=2 & seedx=3 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & dy=1 & seedx=2])={'south'}, A(0,[start & turn & dy=3 & seedx=1 & seedy=3])={'north'}, A(0,[start & turn & dx=2 & dy=2 & seedx=3 & seedy=2])={'west'}, A(0,[start & turn & dy=2 & seedx=1])={'south'}, A(0,[start & turn & dx=4 & dy=3 & seedx=3 & seedy=3])={'south'}, A(0,[start & turn & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedx=2 & seedy=3])={'east'}, A(0,[start & turn & seedx=1])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=3])={'south'}, A(0,[start & turn & dx=4 & dy=3 & seedx=4 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedy=4])={'east'}, A(0,[start & turn & dx=2])={'south'}, A(0,[start & turn & dx=4 & seedx=3])={'south'}, A(0,[start & turn & dx=4 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=1 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=4 & dy=2 & seedx=2 & seedy=4])={'south'}, A(0,[start & turn & dy=2 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=1])={'east'}, A(0,[start & turn & dy=3 & seedx=2 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & dy=2 & seedx=3])={'south'}, A(0,[start & turn & dx=1 & dy=2 & seedx=2 & seedy=4])={'north'}, A(0,[start & turn & dx=3 & dy=3 & seedx=1 & seedy=1])={'east'}, A(0,[start & turn & dy=1 & seedx=2 & seedy=3])={'west'}, A(0,[start & turn & dx=4 & dy=2 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=4 & dy=2 & seedx=3 & seedy=3])={'north'}, A(0,[start & turn & dx=1 & dy=3 & seedy=3])={'east'}, A(0,[start & turn & dx=1 & dy=1 & seedy=2])={'east'}, A(0,[start & turn & dx=4 & dy=2 & seedx=4 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & dy=2 & seedx=4])={'south'}, A(0,[start & turn & dx=2 & dy=3 & seedx=3 & seedy=3])={'west'}, A(0,[start & turn & dx=1 & dy=3 & seedx=2 & seedy=4])={'north'}, A(0,[start & turn & dx=4 & seedx=4 & seedy=1])={'west'}, A(0,[start & turn & dx=3 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=1 & seedy=1])={'east'}, A(0,[start & turn & dx=1 & dy=4 & seedx=3 & seedy=4])={'north'}, A(0,[start & turn & dx=2 & dy=2])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=2])={'south'}, A(0,[start & turn & dx=3 & dy=3 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedx=1])={'south'}, A(0,[start & turn & dx=1 & seedx=2])={'west'}, A(0,[start & turn & dx=4 & dy=2 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=2 & seedy=2])={'north'}, A(0,[start & turn & dx=3 & dy=2 & seedx=3 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=3 & seedx=2 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & dy=1 & seedx=2 & seedy=2])={'west'}, A(0,[start & turn & dx=3 & seedx=4 & seedy=2])={'west'}, A(0,[start & turn & dx=4 & dy=1 & seedx=3 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & dy=3 & seedx=2 & seedy=4])={'east'}, A(0,[start & turn & dx=1 & dy=2 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=2 & dy=1 & seedx=4 & seedy=3])={'west'}, A(0,[start & turn & dx=4 & dy=3 & seedx=4 & seedy=4])={'south'}, A(0,[start & turn & dx=3 & seedx=1])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & seedx=1 & seedy=2])={'north'}, A(0,[start & turn & dx=1 & dy=2 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & seedx=1 & seedy=1])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedy=2])={'east'}, A(0,[start & turn & seedx=2 & seedy=1])={'north'}, A(0,[start & turn & dy=2 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=3 & dy=2 & seedx=1])={'south'}, A(0,[start & turn & dx=1])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=2 & seedy=4])={'east'}, A(0,[start & turn & dx=1 & dy=4 & seedx=3 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=2 & seedx=4 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedx=2 & seedy=2])={'east'}, A(0,[start & turn & dx=3 & dy=3 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=4 & seedx=4 & seedy=3])={'west'}, A(0,[start & turn & dx=2 & dy=3 & seedy=3])={'east'}, A(0,[start & turn & dx=2 & dy=2 & seedx=3 & seedy=4])={'north'}, A(0,[start & turn & dy=2 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=2 & seedy=3])={'north'}, A(0,[start & turn & dx=3 & seedx=4])={'west'}, A(0,[start & turn & dy=2 & seedy=3])={'north'}, A(0,[start & turn & dx=4 & dy=1 & seedx=4])={'south'}, A(0,[start & turn & dx=4 & dy=3 & seedx=3 & seedy=1])={'south'}, A(0,[start & turn & dx=2 & dy=2 & seedx=1 & seedy=4])={'east'}, A(0,[start & turn & dx=3 & dy=4 & seedx=1 & seedy=3])={'east'}, A(0,[start & turn & dx=1 & dy=3 & seedx=2 & seedy=1])={'south'}, A(0,[start & turn & dy=2 & seedx=2 & seedy=2])={'south'}, A(0,[start & turn & dx=1 & dy=1 & seedx=1])={'south'}, A(0,[start & turn & dx=3 & dy=2 & seedx=3 & seedy=3])={'north'}, A(0,[start & turn & dx=2 & seedx=4])={'south'}, A(0,[start & turn & dy=3 & seedx=2 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & seedx=1 & seedy=2])={'east'}, A(0,[start & turn & dy=1 & seedx=1 & seedy=1])={'south'}, A(0,[start & turn & dy=1])={'south'}, A(0,[start & turn & dx=4 & dy=2 & seedx=4 & seedy=4])={'north'}, A(0,[start & turn & dx=1 & dy=2 & seedx=3 & seedy=2])={'south'}, A(0,[start & turn & dx=2 & dy=1 & seedx=4 & seedy=2])={'west'}, A(0,[start & turn & dx=3 & dy=1 & seedx=1 & seedy=1])={'east'}
2024-03-09 13:34:11,162 - synthesizer.py - double-checking specification satisfiability:  : 0.9168202791645554
2024-03-09 13:34:11,227 - synthesizer_pomdp.py - Terminate: False
2024-03-09 13:34:11,228 - synthesizer_pomdp.py - Added memory nodes for observation based on Storm data
2024-03-09 13:34:11,228 - pomdp.py - unfolding POMDP using the following memory allocation vector: [4, 3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2024-03-09 13:34:11,231 - pomdp.py - constructed quotient MDP having 1577 states and 4904 actions.
2024-03-09 13:34:11,330 - storm_pomdp_control.py - Main family based on data from Storm: reduced design space from 3612840847535673327823299977469317703660363493359134687667133821293127704912226019400229420072584761266497064262755145595887172476532006197836093531473103427367340057291990286647002331525356801964495881534236572979796824823460179755013613839855023570998105681426442834156014227295792267264 to 4060266314306809754050218677301898230296627584773574095499271166684855910149390336
2024-03-09 13:34:11,398 - synthesizer.py - synthesis initiated, design space: 3612840847535673327823299977469317703660363493359134687667133821293127704912226019400229420072584761266497064262755145595887172476532006197836093531473103427367340057291990286647002331525356801964495881534236572979796824823460179755013613839855023570998105681426442834156014227295792267264
2024-03-09 13:34:13,282 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:14,086 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:14,086 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:16,356 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:17,167 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:17,167 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:19,368 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:20,096 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:20,096 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:22,386 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:23,187 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:23,187 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:25,398 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:26,176 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:26,176 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:28,402 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:29,267 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:29,267 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:31,449 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:32,243 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:32,243 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:34,430 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:35,289 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:35,289 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:37,435 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:38,346 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:38,346 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:40,443 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:41,296 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:41,296 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:43,450 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:44,350 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:44,350 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:46,469 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:46,901 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:46,901 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:49,478 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:50,387 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:50,387 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:52,492 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:52,961 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:52,962 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:55,508 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:56,370 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:56,371 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:34:58,518 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:34:58,945 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:34:58,945 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:01,513 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:02,445 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:02,446 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:04,527 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:04,978 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:04,978 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:07,531 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:08,044 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:08,045 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:10,546 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:11,024 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:11,024 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:13,565 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:14,175 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:14,176 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:16,553 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:17,035 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:17,035 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:19,565 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:35:20,038 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:35:20,038 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:35:22,575 - synthesizer_ar_storm.py - Pausing synthesis

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.9710318527339832
controller size: 134433

------------------------------------

used FSCs: {1: 3004, 0: 972, 2: 1416, 4: 8, 3: 9, 9: 3, 7: 115, 8: 2, 5: 24}
FSCs used count: 5553
2024-03-09 13:35:24,020 - storm_pomdp_control.py - Interactive Storm resumed
2024-03-09 13:35:24,020 - storm_pomdp_control.py - Updating FSC values in Storm
2024-03-09 13:35:34,041 - storm_pomdp_control.py - Pausing Storm
Finished exploring under-approximation MDP.
Start analysis...
-----------Storm-----------               
Value = 0.9710804009492824 | Time elapsed = 383.3s | FSC size = 137125

2024-03-09 13:37:07,715 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:07,715 - synthesizer_ar_storm.py - Applying family split according to Storm results
2024-03-09 13:37:07,727 - synthesizer_ar_storm.py - State after Storm splitting: Main families - 0, Subfamilies - 99
2024-03-09 13:37:09,848 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:10,783 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:10,784 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:12,923 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:13,819 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:13,819 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:15,928 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:16,375 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:16,375 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:18,936 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:19,381 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:19,381 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:21,951 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:22,389 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:22,389 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:24,954 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:25,484 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:25,484 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:27,965 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:28,435 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:28,435 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:30,977 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:31,459 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:31,459 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:33,981 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:34,525 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:34,525 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:36,987 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:37,423 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:37,423 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:39,998 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:40,934 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:40,934 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:43,016 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:43,496 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:43,497 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:46,018 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:46,534 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:46,534 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:49,039 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:49,550 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:49,550 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:52,054 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:52,562 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:52,562 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:55,057 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:55,629 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:55,629 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:37:58,060 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:37:58,636 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:37:58,636 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:01,079 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:38:01,721 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:38:01,722 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:04,104 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:38:04,674 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:38:04,674 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:07,116 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:38:07,557 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:38:07,557 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:10,113 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:38:10,567 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:38:10,567 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:13,126 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:38:14,045 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:38:14,045 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:16,143 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:38:16,570 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:38:16,571 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:38:19,148 - synthesizer_ar_storm.py - Pausing synthesis

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.9710804009492824
controller size: 137125

------------------------------------

used FSCs: {2: 2131, 0: 986, 4: 1, 3: 4, 1: 2407}
FSCs used count: 5529
2024-03-09 13:38:20,611 - storm_pomdp_control.py - Interactive Storm resumed
2024-03-09 13:38:20,611 - storm_pomdp_control.py - Updating FSC values in Storm
2024-03-09 13:38:30,626 - storm_pomdp_control.py - Pausing Storm
Finished exploring under-approximation MDP.
Start analysis...
-----------Storm-----------               
Value = 0.9711124364198589 | Time elapsed = 565.0s | FSC size = 140294

2024-03-09 13:40:09,398 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:09,398 - synthesizer_ar_storm.py - Applying family split according to Storm results
2024-03-09 13:40:09,410 - synthesizer_ar_storm.py - State after Storm splitting: Main families - 0, Subfamilies - 100
2024-03-09 13:40:11,534 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:12,385 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:12,386 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:14,609 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:15,450 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:15,450 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:17,629 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:18,432 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:18,432 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:20,632 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:21,403 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:21,403 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:23,642 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:24,448 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:24,448 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:26,659 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:27,496 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:27,496 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:29,680 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:30,457 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:30,457 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:32,676 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:33,525 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:33,525 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:35,682 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:36,116 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:36,117 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:38,695 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:39,575 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:39,575 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:41,744 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:42,427 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:42,427 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:44,714 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:45,460 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:45,461 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:47,726 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:48,461 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:48,461 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:50,738 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:51,518 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:51,519 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:53,751 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:54,458 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:54,458 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:56,756 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:40:57,597 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:40:57,597 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:40:59,761 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:00,582 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:00,582 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:02,769 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:03,563 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:03,563 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:05,782 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:06,221 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:06,222 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:08,798 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:09,569 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:09,569 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:11,808 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:12,573 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:12,573 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:14,810 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:15,605 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:15,606 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:17,890 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:41:18,670 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:41:18,670 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:41:20,894 - synthesizer_ar_storm.py - Pausing synthesis

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.9711124364198589
controller size: 140294

------------------------------------

used FSCs: {2: 4481, 0: 996, 1: 117, 7: 60, 4: 21}
FSCs used count: 5675
2024-03-09 13:41:22,354 - storm_pomdp_control.py - Interactive Storm resumed
2024-03-09 13:41:22,355 - storm_pomdp_control.py - Updating FSC values in Storm
2024-03-09 13:41:32,375 - storm_pomdp_control.py - Pausing Storm
Finished exploring under-approximation MDP.
Start analysis...
-----------Storm-----------               
Value = 0.9711126217789616 | Time elapsed = 750.7s | FSC size = 140294

2024-03-09 13:43:15,058 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:15,059 - synthesizer_ar_storm.py - Applying family split according to Storm results
2024-03-09 13:43:15,069 - synthesizer_ar_storm.py - State after Storm splitting: Main families - 0, Subfamilies - 96
2024-03-09 13:43:17,276 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:18,123 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:18,123 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:20,345 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:21,170 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:21,170 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:23,363 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:24,168 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:24,168 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:26,368 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:27,133 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:27,133 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:29,390 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:30,060 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:30,060 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:32,390 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:33,123 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:33,123 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:35,400 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:36,092 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:36,093 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:38,415 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:39,156 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:39,156 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:41,419 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:42,213 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:42,213 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:44,429 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:45,268 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:45,268 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:47,441 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:48,304 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:48,304 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:50,451 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:51,168 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:51,168 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:53,464 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:54,193 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:54,193 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:56,464 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:43:56,925 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:43:56,926 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:43:59,475 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:00,252 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:00,252 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:02,484 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:03,301 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:03,301 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:05,495 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:06,187 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:06,187 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:08,513 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:09,197 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:09,197 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:11,520 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:12,227 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:12,227 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:14,537 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:15,223 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:15,223 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:17,543 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:18,310 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:18,310 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:20,557 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:21,350 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:21,351 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:23,573 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:44:24,368 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:44:24,369 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:44:26,581 - synthesizer_ar_storm.py - Pausing synthesis

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.9711126217789616
controller size: 140294

------------------------------------

used FSCs: {2: 4506, 0: 996, 1: 113, 4: 21, 9: 39}
FSCs used count: 5675
2024-03-09 13:44:28,049 - storm_pomdp_control.py - Interactive Storm resumed
2024-03-09 13:44:28,049 - storm_pomdp_control.py - Updating FSC values in Storm
2024-03-09 13:44:38,070 - storm_pomdp_control.py - Pausing Storm
Finished exploring under-approximation MDP.
Start analysis...
-----------Storm-----------               
Value = 0.9711126217789616 | Time elapsed = 942.5s | FSC size = 140294

2024-03-09 13:46:26,757 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:26,757 - synthesizer_ar_storm.py - Applying family split according to Storm results
2024-03-09 13:46:26,770 - synthesizer_ar_storm.py - State after Storm splitting: Main families - 0, Subfamilies - 99
2024-03-09 13:46:29,160 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:29,825 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:29,826 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:32,229 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:33,085 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:33,085 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:35,260 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:35,878 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:35,879 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:38,246 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:38,907 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:38,907 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:41,266 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:41,817 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:41,817 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:44,272 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:44,824 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:44,824 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:47,282 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:47,872 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:47,872 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:50,287 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:50,934 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:50,934 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:53,303 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:53,960 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:53,960 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:56,310 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:46:56,987 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:46:56,987 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:46:59,324 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:00,018 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:00,018 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:02,330 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:03,069 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:03,070 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:05,345 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:06,013 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:06,013 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:08,336 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:09,040 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:09,041 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:11,351 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:11,923 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:11,923 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:14,371 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:15,122 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:15,122 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:17,378 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:18,186 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:18,186 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:20,382 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:21,264 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:21,264 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:23,395 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:24,292 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:24,292 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:26,405 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:26,991 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:26,991 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:29,415 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:30,056 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:30,056 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:32,421 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:33,032 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:33,032 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:35,443 - synthesizer_ar_storm.py - Pausing synthesis
2024-03-09 13:47:36,159 - synthesizer_ar_storm.py - Resuming synthesis
2024-03-09 13:47:36,159 - synthesizer_ar_storm.py - PAYNT's value is better. Prioritizing synthesis results
2024-03-09 13:47:38,447 - synthesizer_ar_storm.py - Pausing synthesis

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.9711126217789616
controller size: 140294

------------------------------------

used FSCs: {2: 4541, 0: 996, 1: 137, 4: 1}
FSCs used count: 5675
2024-03-09 13:47:40,009 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:40,011 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:40,012 - synthesizer.py - None
2024-03-09 13:47:40,012 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:40,510 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:40,510 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:40,510 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'south'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'east'}, A(0,240)={'north'}, A(0,243)={'north'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'south'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'south'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'north'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'east'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'south'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'south'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'east'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:40,515 - synthesizer.py - double-checking specification satisfiability:  : 0.9971708082278319
2024-03-09 13:47:40,582 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:41,010 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:41,011 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:41,011 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'south'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'west'}, A(0,64)={'north'}, A(0,65)={'south'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'south'}, A(0,78)={'south'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'east'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'north'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'south'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'north'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'east'}, A(0,415)={'north'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'west'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'north'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:41,015 - synthesizer.py - double-checking specification satisfiability:  : 0.9628714077361906
2024-03-09 13:47:41,082 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:41,500 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:41,501 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:41,501 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'south'}, A(0,114)={'east'}, A(0,115)={'south'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'south'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'east'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'south'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'west'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'east'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'east'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:41,507 - synthesizer.py - double-checking specification satisfiability:  : 0.9365233378234346
2024-03-09 13:47:41,573 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:42,007 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:42,008 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:42,008 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'south'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'east'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'south'}, A(0,78)={'west'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'south'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'south'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'north'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:42,013 - synthesizer.py - double-checking specification satisfiability:  : 0.9452087065641451
2024-03-09 13:47:42,083 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:42,508 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:42,509 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:42,509 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'south'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'east'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'south'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'south'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'north'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:42,514 - synthesizer.py - double-checking specification satisfiability:  : 0.9464563120932229
2024-03-09 13:47:42,582 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:43,002 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:43,003 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:43,003 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'west'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'west'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'south'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'south'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'north'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'east'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'south'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'south'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'south'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'south'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'south'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'south'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'west'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'east'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'south'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:43,008 - synthesizer.py - double-checking specification satisfiability:  : 0.9392124646185923
2024-03-09 13:47:43,074 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:43,503 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:43,504 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:43,504 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'west'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'west'}, A(0,64)={'north'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'south'}, A(0,90)={'south'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'east'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'east'}, A(0,125)={'east'}, A(0,126)={'north'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'east'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'east'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'north'}, A(0,178)={'south'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'south'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'south'}, A(0,224)={'south'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'east'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'north'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'north'}, A(0,288)={'north'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'south'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'east'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'west'}, A(0,675)={'south'}, A(0,678)={'east'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'south'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'east'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'south'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:43,509 - synthesizer.py - double-checking specification satisfiability:  : 0.9552386892042425
2024-03-09 13:47:43,581 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:43,977 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:43,978 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:43,978 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'north'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'south'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'south'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'east'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'west'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'west'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'north'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'west'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'west'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'east'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'east'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'south'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:43,983 - synthesizer.py - double-checking specification satisfiability:  : 0.9535487179918759
2024-03-09 13:47:44,050 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:44,545 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:44,546 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:44,546 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'west'}, A(0,64)={'north'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'south'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'east'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'west'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'north'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'north'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'east'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'north'}, A(0,665)={'west'}, A(0,666)={'north'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'east'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'north'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:44,550 - synthesizer.py - double-checking specification satisfiability:  : 0.9573487600695623
2024-03-09 13:47:44,620 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:45,026 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:45,027 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:45,027 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'north'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'south'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'south'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'north'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'west'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:45,031 - synthesizer.py - double-checking specification satisfiability:  : 0.9577641676540841
2024-03-09 13:47:45,098 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:45,239 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:45,240 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:45,240 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'west'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'north'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'east'}, A(0,114)={'east'}, A(0,115)={'north'}, A(0,121)={'east'}, A(0,124)={'east'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'east'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'north'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'north'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'north'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'north'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'north'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'north'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'east'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'north'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'south'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'east'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'east'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'east'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'north'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'north'}, A(0,657)={'north'}, A(0,659)={'north'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'west'}, A(0,675)={'south'}, A(0,678)={'east'}, A(0,680)={'south'}, A(0,683)={'east'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'north'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:45,245 - synthesizer.py - double-checking specification satisfiability:  : 0.9532005629740272
2024-03-09 13:47:45,313 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:45,716 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:45,717 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:45,718 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'south'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'south'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'south'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:45,722 - synthesizer.py - double-checking specification satisfiability:  : 0.9415651494694812
2024-03-09 13:47:45,787 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:46,210 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:46,211 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:46,211 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'west'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'east'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'west'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'east'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'west'}, A(0,285)={'south'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'south'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'west'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'east'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:46,216 - synthesizer.py - double-checking specification satisfiability:  : 0.9412288727171553
2024-03-09 13:47:46,285 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:46,711 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:46,712 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:46,712 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'west'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'west'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'east'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'east'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'west'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'north'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'south'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:46,717 - synthesizer.py - double-checking specification satisfiability:  : 0.9459447155681426
2024-03-09 13:47:46,781 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:47,223 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:47,224 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:47,224 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'west'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'west'}, A(0,64)={'north'}, A(0,65)={'north'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'east'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'east'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'east'}, A(0,131)={'east'}, A(0,135)={'east'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'north'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'east'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'north'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'north'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'south'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'east'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'east'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'north'}, A(0,675)={'south'}, A(0,678)={'east'}, A(0,680)={'south'}, A(0,683)={'east'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'north'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'north'}, A(0,760)={'east'}
2024-03-09 13:47:47,228 - synthesizer.py - double-checking specification satisfiability:  : 0.953407297364485
2024-03-09 13:47:47,294 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:47,749 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:47,750 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:47,750 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'west'}, A(0,64)={'north'}, A(0,65)={'south'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'south'}, A(0,78)={'west'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'north'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'south'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'north'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'west'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'east'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'north'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:47,755 - synthesizer.py - double-checking specification satisfiability:  : 0.9685628975638741
2024-03-09 13:47:47,820 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:48,208 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:48,209 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:48,209 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'south'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'west'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'south'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'south'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'east'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'south'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'east'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'west'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'east'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'south'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'west'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'east'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:48,214 - synthesizer.py - double-checking specification satisfiability:  : 0.9382740826093944
2024-03-09 13:47:48,284 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:48,597 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:48,599 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:48,599 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'west'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'north'}, A(0,65)={'south'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'east'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'north'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'east'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'west'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'south'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'north'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'east'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'north'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'north'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:48,603 - synthesizer.py - double-checking specification satisfiability:  : 0.9579607192391979
2024-03-09 13:47:48,672 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:49,090 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:49,091 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:49,091 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'north'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'west'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'south'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'east'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'south'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'south'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'south'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'west'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:49,096 - synthesizer.py - double-checking specification satisfiability:  : 0.9570358209287642
2024-03-09 13:47:49,161 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:49,573 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:49,573 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:49,574 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'west'}, A(0,14)={'south'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'west'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'west'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'east'}, A(0,78)={'west'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'south'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'east'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'east'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'south'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'south'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'south'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'south'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'south'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'south'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'west'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'south'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'south'}, A(0,488)={'south'}, A(0,492)={'south'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'west'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'south'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'south'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'south'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'east'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'south'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'west'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'south'}
2024-03-09 13:47:49,578 - synthesizer.py - double-checking specification satisfiability:  : 0.9411112943985677
2024-03-09 13:47:49,646 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:49,998 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:49,999 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:49,999 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'west'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'north'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'east'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'east'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'east'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'east'}, A(0,114)={'east'}, A(0,115)={'north'}, A(0,121)={'east'}, A(0,124)={'east'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'east'}, A(0,136)={'west'}, A(0,137)={'west'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'north'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'south'}, A(0,164)={'north'}, A(0,165)={'south'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'north'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'east'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'north'}, A(0,278)={'east'}, A(0,279)={'north'}, A(0,285)={'west'}, A(0,287)={'east'}, A(0,288)={'north'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'west'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'north'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'north'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'south'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'east'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'north'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'east'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'east'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'east'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'north'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'east'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'north'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'north'}, A(0,657)={'north'}, A(0,659)={'north'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'west'}, A(0,675)={'south'}, A(0,678)={'east'}, A(0,680)={'south'}, A(0,683)={'east'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'north'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'east'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:50,004 - synthesizer.py - double-checking specification satisfiability:  : 0.9576072208460273
2024-03-09 13:47:50,072 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:50,511 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:50,512 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:50,512 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'south'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'west'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'north'}, A(0,55)={'east'}, A(0,56)={'north'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'north'}, A(0,64)={'west'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'west'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'east'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'south'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'west'}, A(0,135)={'east'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'west'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'east'}, A(0,190)={'east'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'east'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'east'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'east'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'north'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'west'}, A(0,285)={'west'}, A(0,287)={'east'}, A(0,288)={'north'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'west'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'east'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'east'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'east'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'north'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'east'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'west'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'east'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'east'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'east'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'east'}, A(0,680)={'south'}, A(0,683)={'east'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'north'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'east'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:50,518 - synthesizer.py - double-checking specification satisfiability:  : 0.9546491119165945
2024-03-09 13:47:50,587 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:50,971 - synthesizer_ar_storm.py - Terminating controller synthesis
2024-03-09 13:47:50,972 - synthesizer.py - synthesis finished, printing synthesized assignment below:
2024-03-09 13:47:50,972 - synthesizer.py - A(0,0)={'north'}, A(0,1)={'east'}, A(0,3)={'north'}, A(0,4)={'east'}, A(0,7)={'west'}, A(0,12)={'north'}, A(0,14)={'east'}, A(0,15)={'north'}, A(0,18)={'east'}, A(0,25)={'south'}, A(0,31)={'south'}, A(0,32)={'west'}, A(0,36)={'south'}, A(0,38)={'east'}, A(0,41)={'east'}, A(0,44)={'east'}, A(0,45)={'east'}, A(0,47)={'east'}, A(0,52)={'south'}, A(0,54)={'west'}, A(0,55)={'east'}, A(0,56)={'west'}, A(0,58)={'south'}, A(0,59)={'south'}, A(0,63)={'west'}, A(0,64)={'north'}, A(0,65)={'east'}, A(0,66)={'south'}, A(0,67)={'east'}, A(0,68)={'south'}, A(0,69)={'south'}, A(0,70)={'east'}, A(0,73)={'south'}, A(0,75)={'east'}, A(0,76)={'west'}, A(0,78)={'south'}, A(0,79)={'east'}, A(0,80)={'east'}, A(0,82)={'east'}, A(0,88)={'east'}, A(0,90)={'east'}, A(0,91)={'south'}, A(0,98)={'west'}, A(0,99)={'east'}, A(0,100)={'south'}, A(0,101)={'west'}, A(0,102)={'south'}, A(0,107)={'south'}, A(0,108)={'south'}, A(0,109)={'east'}, A(0,110)={'east'}, A(0,112)={'south'}, A(0,113)={'south'}, A(0,114)={'east'}, A(0,115)={'east'}, A(0,121)={'east'}, A(0,124)={'west'}, A(0,125)={'east'}, A(0,126)={'east'}, A(0,129)={'west'}, A(0,131)={'east'}, A(0,135)={'south'}, A(0,136)={'west'}, A(0,137)={'east'}, A(0,138)={'west'}, A(0,139)={'east'}, A(0,141)={'east'}, A(0,142)={'east'}, A(0,143)={'south'}, A(0,147)={'south'}, A(0,148)={'south'}, A(0,149)={'east'}, A(0,150)={'north'}, A(0,153)={'east'}, A(0,156)={'south'}, A(0,157)={'south'}, A(0,160)={'north'}, A(0,162)={'east'}, A(0,164)={'east'}, A(0,165)={'east'}, A(0,166)={'south'}, A(0,167)={'south'}, A(0,169)={'south'}, A(0,172)={'east'}, A(0,173)={'south'}, A(0,177)={'east'}, A(0,178)={'east'}, A(0,179)={'east'}, A(0,181)={'south'}, A(0,184)={'north'}, A(0,186)={'south'}, A(0,188)={'north'}, A(0,189)={'south'}, A(0,190)={'south'}, A(0,191)={'south'}, A(0,193)={'south'}, A(0,195)={'east'}, A(0,197)={'east'}, A(0,201)={'south'}, A(0,202)={'south'}, A(0,203)={'north'}, A(0,206)={'south'}, A(0,207)={'east'}, A(0,208)={'east'}, A(0,211)={'south'}, A(0,212)={'west'}, A(0,214)={'south'}, A(0,216)={'west'}, A(0,217)={'south'}, A(0,220)={'east'}, A(0,221)={'east'}, A(0,224)={'east'}, A(0,226)={'north'}, A(0,228)={'north'}, A(0,231)={'east'}, A(0,233)={'north'}, A(0,234)={'north'}, A(0,236)={'south'}, A(0,237)={'west'}, A(0,240)={'north'}, A(0,243)={'west'}, A(0,245)={'south'}, A(0,246)={'east'}, A(0,249)={'south'}, A(0,251)={'west'}, A(0,253)={'south'}, A(0,256)={'south'}, A(0,257)={'north'}, A(0,258)={'east'}, A(0,260)={'south'}, A(0,262)={'north'}, A(0,264)={'south'}, A(0,265)={'west'}, A(0,266)={'east'}, A(0,270)={'west'}, A(0,272)={'south'}, A(0,275)={'east'}, A(0,276)={'west'}, A(0,277)={'west'}, A(0,278)={'east'}, A(0,279)={'west'}, A(0,285)={'east'}, A(0,287)={'east'}, A(0,288)={'west'}, A(0,290)={'east'}, A(0,293)={'east'}, A(0,294)={'west'}, A(0,296)={'north'}, A(0,299)={'east'}, A(0,301)={'east'}, A(0,303)={'south'}, A(0,304)={'south'}, A(0,306)={'south'}, A(0,307)={'south'}, A(0,310)={'south'}, A(0,312)={'east'}, A(0,322)={'east'}, A(0,324)={'east'}, A(0,325)={'north'}, A(0,329)={'west'}, A(0,333)={'south'}, A(0,334)={'east'}, A(0,336)={'east'}, A(0,340)={'west'}, A(0,341)={'east'}, A(0,342)={'east'}, A(0,344)={'north'}, A(0,345)={'north'}, A(0,347)={'south'}, A(0,350)={'south'}, A(0,356)={'east'}, A(0,357)={'east'}, A(0,360)={'east'}, A(0,362)={'east'}, A(0,364)={'east'}, A(0,373)={'south'}, A(0,374)={'north'}, A(0,380)={'east'}, A(0,381)={'east'}, A(0,383)={'west'}, A(0,389)={'south'}, A(0,390)={'west'}, A(0,391)={'north'}, A(0,393)={'east'}, A(0,398)={'south'}, A(0,399)={'east'}, A(0,400)={'south'}, A(0,401)={'south'}, A(0,404)={'south'}, A(0,407)={'west'}, A(0,409)={'west'}, A(0,410)={'north'}, A(0,412)={'east'}, A(0,413)={'south'}, A(0,414)={'east'}, A(0,415)={'south'}, A(0,416)={'south'}, A(0,417)={'south'}, A(0,420)={'east'}, A(0,422)={'south'}, A(0,423)={'east'}, A(0,428)={'south'}, A(0,433)={'south'}, A(0,435)={'south'}, A(0,436)={'south'}, A(0,438)={'north'}, A(0,439)={'west'}, A(0,442)={'east'}, A(0,443)={'south'}, A(0,444)={'south'}, A(0,445)={'east'}, A(0,455)={'south'}, A(0,458)={'north'}, A(0,461)={'south'}, A(0,462)={'east'}, A(0,464)={'east'}, A(0,466)={'north'}, A(0,469)={'west'}, A(0,470)={'east'}, A(0,471)={'south'}, A(0,476)={'south'}, A(0,477)={'west'}, A(0,480)={'east'}, A(0,486)={'east'}, A(0,488)={'south'}, A(0,492)={'east'}, A(0,493)={'south'}, A(0,495)={'south'}, A(0,500)={'north'}, A(0,503)={'east'}, A(0,505)={'south'}, A(0,506)={'south'}, A(0,508)={'north'}, A(0,510)={'south'}, A(0,513)={'east'}, A(0,515)={'east'}, A(0,516)={'east'}, A(0,517)={'south'}, A(0,518)={'south'}, A(0,520)={'east'}, A(0,522)={'south'}, A(0,524)={'south'}, A(0,526)={'south'}, A(0,528)={'east'}, A(0,529)={'west'}, A(0,531)={'east'}, A(0,533)={'east'}, A(0,535)={'north'}, A(0,537)={'east'}, A(0,539)={'south'}, A(0,540)={'east'}, A(0,543)={'south'}, A(0,545)={'north'}, A(0,546)={'west'}, A(0,547)={'east'}, A(0,548)={'east'}, A(0,549)={'west'}, A(0,551)={'south'}, A(0,555)={'north'}, A(0,556)={'west'}, A(0,557)={'south'}, A(0,558)={'south'}, A(0,563)={'south'}, A(0,566)={'east'}, A(0,567)={'south'}, A(0,569)={'south'}, A(0,571)={'south'}, A(0,574)={'east'}, A(0,575)={'east'}, A(0,581)={'south'}, A(0,584)={'south'}, A(0,586)={'east'}, A(0,587)={'east'}, A(0,588)={'south'}, A(0,590)={'south'}, A(0,595)={'south'}, A(0,596)={'north'}, A(0,598)={'south'}, A(0,600)={'north'}, A(0,602)={'south'}, A(0,603)={'north'}, A(0,606)={'south'}, A(0,608)={'north'}, A(0,609)={'east'}, A(0,612)={'east'}, A(0,613)={'north'}, A(0,614)={'south'}, A(0,616)={'west'}, A(0,617)={'north'}, A(0,618)={'west'}, A(0,622)={'north'}, A(0,629)={'south'}, A(0,630)={'east'}, A(0,631)={'north'}, A(0,633)={'south'}, A(0,639)={'south'}, A(0,640)={'south'}, A(0,642)={'east'}, A(0,644)={'south'}, A(0,648)={'south'}, A(0,650)={'south'}, A(0,652)={'north'}, A(0,655)={'west'}, A(0,656)={'east'}, A(0,657)={'north'}, A(0,659)={'west'}, A(0,665)={'west'}, A(0,666)={'east'}, A(0,669)={'east'}, A(0,671)={'east'}, A(0,672)={'south'}, A(0,675)={'south'}, A(0,678)={'south'}, A(0,680)={'south'}, A(0,683)={'north'}, A(0,684)={'south'}, A(0,686)={'east'}, A(0,687)={'east'}, A(0,689)={'south'}, A(0,693)={'south'}, A(0,694)={'south'}, A(0,695)={'east'}, A(0,696)={'east'}, A(0,701)={'east'}, A(0,702)={'south'}, A(0,704)={'east'}, A(0,705)={'south'}, A(0,706)={'south'}, A(0,712)={'east'}, A(0,713)={'west'}, A(0,716)={'south'}, A(0,718)={'north'}, A(0,721)={'west'}, A(0,727)={'north'}, A(0,728)={'south'}, A(0,730)={'south'}, A(0,731)={'east'}, A(0,733)={'east'}, A(0,734)={'south'}, A(0,735)={'south'}, A(0,736)={'south'}, A(0,738)={'north'}, A(0,739)={'south'}, A(0,741)={'north'}, A(0,743)={'east'}, A(0,747)={'south'}, A(0,749)={'south'}, A(0,751)={'west'}, A(0,754)={'south'}, A(0,755)={'west'}, A(0,760)={'east'}
2024-03-09 13:47:50,976 - synthesizer.py - double-checking specification satisfiability:  : 0.9663061120678151
2024-03-09 13:47:51,046 - synthesizer_pomdp.py - Terminate: True
2024-03-09 13:47:51,046 - storm_pomdp_control.py - Storm POMDP analysis completed

------------------------------------

PAYNT results: 
0.9168202791645554
controller size: 5163

Storm results: 
0.9711126217789616
controller size: 140294

------------------------------------

