pomdp

formula goal = x=1 & y=3;

const int x1 = 1;
const int x2 = 2;
const int x3 = 3;
const int y1 = 1;
const int y2 = 2;
const int y3 = 3;

observable "in" = (x=1 & y=1 & pos11=0) | (x=2 & y=1 & pos21=0) | (x=3 & y=1 & pos31=0) | (x=3 & y=2 & pos32=0) | (x=3 & y=3 & pos33=0) | (x=2 & y=3 & pos23=0);
observable "switch" = (x=1 & y=1 & (pos11=1 | pos11=2)) | (x=2 & y=1 & (pos21=1 | pos21=2)) | (x=3 & y=1 & (pos31=1 | pos31=2)) | (x=3 & y=2 & (pos32=1 | pos32=2)) | (x=3 & y=3 & (pos33=1 | pos33=2)) | (x=2 & y=3 & (pos23=1 | pos23=2));
observable "out" = (x=1 & y=1 & pos11=3) | (x=2 & y=1 & pos21=3) | (x=3 & y=1 & pos31=3) | (x=3 & y=2 & pos32=3) | (x=3 & y=3 & pos33=3) | (x=2 & y=3 & pos23=3);
observable "goal" = goal;

// can go in this direction
formula u = x=3 & y<3;
formula r = x<3 & (y=1 | y=3);
formula d = x=3 & y>1;
formula l = x>1 & (y=1 | y=3);

// updates of coordinates (if possible)
formula yu = u ? (y+1) : y;
formula xr = r ? (x+1) : x;
formula yd = d ? (y-1) : y;
formula xl = l ? (x-1) : x;

const double switch_rate = 0.5;


module grid
    x : [1..3] init 1;
    y : [1..3] init 1;

    [up] (x=1 & y=1 & pos11=3) | (x=2 & y=1 & pos21=3) | (x=3 & y=1 & pos31=3) | (x=3 & y=2 & pos32=3) | (x=3 & y=3 & pos33=3) | (x=2 & y=3 & pos23=3) -> (y'=yu);
    [right] (x=1 & y=1 & pos11=3) | (x=2 & y=1 & pos21=3) | (x=3 & y=1 & pos31=3) | (x=3 & y=2 & pos32=3) | (x=3 & y=3 & pos33=3) | (x=2 & y=3 & pos23=3) -> (x'=xr);
    [down] (x=1 & y=1 & pos11=3) | (x=2 & y=1 & pos21=3) | (x=3 & y=1 & pos31=3) | (x=3 & y=2 & pos32=3) | (x=3 & y=3 & pos33=3) | (x=2 & y=3 & pos23=3) -> (y'=yd);
    [left] (x=1 & y=1 & pos11=3) | (x=2 & y=1 & pos21=3) | (x=3 & y=1 & pos31=3) | (x=3 & y=2 & pos32=3) | (x=3 & y=3 & pos33=3) | (x=2 & y=3 & pos23=3) -> (x'=xl);

endmodule



module cells
    pos11 : [0..3] init 0;
    pos21 : [0..3] init 0;
    pos31 : [0..3] init 0;
    pos32 : [0..3] init 0;
    pos33 : [0..3] init 0;
    pos23 : [0..3] init 0;

    [in]  x=x1 & y=y1 & pos11=0 -> 0.5: (pos11'=1) + 0.5: (pos11'=2);

    [l]   x=x1 & y=y1 & pos11=1 -> switch_rate: (pos11'=3) + 1-switch_rate: (pos11'=1);
    [r]   x=x1 & y=y1 & pos11=1 -> switch_rate: (pos11'=1) + 1-switch_rate: (pos11'=2);
    [l]   x=x1 & y=y1 & pos11=2 -> switch_rate: (pos11'=2) + 1-switch_rate: (pos11'=1);
    [r]   x=x1 & y=y1 & pos11=2 -> switch_rate: (pos11'=3) + 1-switch_rate: (pos11'=2);



    [in]  x=x2 & y=y1 & pos21=0 -> 0.5: (pos21'=1) + 0.5: (pos21'=2);

    [l]   x=x2 & y=y1 & pos21=1 -> switch_rate: (pos21'=3) + 1-switch_rate: (pos21'=1);
    [r]   x=x2 & y=y1 & pos21=1 -> switch_rate: (pos21'=1) + 1-switch_rate: (pos21'=2);
    [l]   x=x2 & y=y1 & pos21=2 -> switch_rate: (pos21'=2) + 1-switch_rate: (pos21'=1);
    [r]   x=x2 & y=y1 & pos21=2 -> switch_rate: (pos21'=3) + 1-switch_rate: (pos21'=2);  



    [in]  x=x3 & y=y1 & pos31=0 -> 0.5: (pos31'=1) + 0.5: (pos31'=2);

    [l]   x=x3 & y=y1 & pos31=1 -> switch_rate: (pos31'=3) + 1-switch_rate: (pos31'=1);
    [r]   x=x3 & y=y1 & pos31=1 -> switch_rate: (pos31'=1) + 1-switch_rate: (pos31'=2);
    [l]   x=x3 & y=y1 & pos31=2 -> switch_rate: (pos31'=2) + 1-switch_rate: (pos31'=1);
    [r]   x=x3 & y=y1 & pos31=2 -> switch_rate: (pos31'=3) + 1-switch_rate: (pos31'=2); 



    [in]  x=x3 & y=y2 & pos32=0 -> 0.5: (pos32'=1) + 0.5: (pos32'=2);

    [l]   x=x3 & y=y2 & pos32=1 -> switch_rate: (pos32'=3) + 1-switch_rate: (pos32'=1);
    [r]   x=x3 & y=y2 & pos32=1 -> switch_rate: (pos32'=1) + 1-switch_rate: (pos32'=2);
    [l]   x=x3 & y=y2 & pos32=2 -> switch_rate: (pos32'=2) + 1-switch_rate: (pos32'=1);
    [r]   x=x3 & y=y2 & pos32=2 -> switch_rate: (pos32'=3) + 1-switch_rate: (pos32'=2); 



    [in]  x=x3 & y=y3 & pos33=0 -> 0.5: (pos33'=1) + 0.5: (pos33'=2);

    [l]   x=x3 & y=y3 & pos33=1 -> switch_rate: (pos33'=3) + 1-switch_rate: (pos33'=1);
    [r]   x=x3 & y=y3 & pos33=1 -> switch_rate: (pos33'=1) + 1-switch_rate: (pos33'=2);
    [l]   x=x3 & y=y3 & pos33=2 -> switch_rate: (pos33'=2) + 1-switch_rate: (pos33'=1);
    [r]   x=x3 & y=y3 & pos33=2 -> switch_rate: (pos33'=3) + 1-switch_rate: (pos33'=2); 



    [in]  x=x2 & y=y3 & pos23=0 -> 0.5: (pos23'=1) + 0.5: (pos23'=2);

    [l]   x=x2 & y=y3 & pos23=1 -> switch_rate: (pos23'=3) + 1-switch_rate: (pos23'=1);
    [r]   x=x2 & y=y3 & pos23=1 -> switch_rate: (pos23'=1) + 1-switch_rate: (pos23'=2);
    [l]   x=x2 & y=y3 & pos23=2 -> switch_rate: (pos23'=2) + 1-switch_rate: (pos23'=1);
    [r]   x=x2 & y=y3 & pos23=2 -> switch_rate: (pos23'=3) + 1-switch_rate: (pos23'=2);         

endmodule


rewards "steps"
    [up]    true : 1;
    [right] true : 1;
    [down]  true : 1;
    [left]  true : 1;
endrewards